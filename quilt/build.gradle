architectury {
	platformSetupLoomIde()
	loader("quilt")
}

configurations {
	common {
		canBeResolved = true
		canBeConsumed = false
	}
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentQuilt.extendsFrom common

	// Files in this configuration will be bundled into your mod using the Shadow plugin.
	// Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
	shadowBundle {
		canBeResolved = true
		canBeConsumed = false
	}
}

dependencies {
	modImplementation "org.quiltmc:quilt-loader:${rootProject.quilt_loader_version}"

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowBundle project(path: ':common', configuration: 'transformProductionQuilt')
}

processResources {
	inputs.property "group", rootProject.maven_group
	inputs.property "version", rootProject.version

	filesMatching("quilt.mod.json") {
		expand "group": rootProject.maven_group,
				"version": rootProject.version
	}
}

shadowJar {
	configurations = [project.configurations.shadowBundle]
	archiveClassifier = 'dev-shadow'
}

remapJar {
	inputFile.set shadowJar.archiveFile
}
