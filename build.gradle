plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT" apply false
    id "dev.architectury.loom" version "1.9.428" apply false
}

tasks.register('updateVersion') {
    doLast {
        int auto_update_version = 0
        String version_filename = rootProject.version_filename

        if (file(version_filename).exists()) {
            auto_update_version = file(version_filename).text.trim() as Integer

            gradle.addListener(new BuildListener() {
                @Override
                void buildFinished(BuildResult result) {
                    if (!result.failure) {
                        new File(projectDir, version_filename).text = auto_update_version + 1 as String

                        println "Yoooo project build ${auto_update_version} just dropped"
                    }
                }

                @Override void settingsEvaluated(Settings settings) {}
                @Override void projectsLoaded(Gradle gradle) {}
                @Override void projectsEvaluated(Gradle gradle) {}
            })
        }
        else new File(projectDir, version_filename).text = auto_update_version as String
    }
}

def modVersion = "1.0.${file(rootProject.version_filename).text.trim()}+${rootProject.minecraft_version}"

subprojects {
    apply plugin: 'dev.architectury.loom'

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    version = modVersion
    group = rootProject.maven_group

    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        maven {
            name = 'Forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'NeoForge'
            url = 'https://maven.neoforged.net/releases'
        }
        maven {
            name = 'Quilt'
            url = 'https://maven.quiltmc.org/repository/release'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = Integer.parseInt(rootProject.java_version)
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(Integer.parseInt(rootProject.java_version))
        }
    }

    java {
        withSourcesJar()
    }
}

architectury {
    minecraft = rootProject.minecraft_version
}

tasks.register("unifiedJar", Jar) {
    archiveClassifier.set("all")

    with project(":common").tasks.named("jar").get()

    def platforms = rootProject.enabled_platforms.split(",")
    if ("fabric" in platforms) {
        from project(":fabric").tasks.named("remapJar")
    }
    if ("forge" in platforms) {
        from project(":forge").tasks.named("jar")
    }
    if ("neoforge" in platforms) {
        from project(":neoforge").tasks.named("jar")
    }
    if ("quilt" in platforms) {
        from project(":quilt").tasks.named("remapJar")
    }
}

artifacts {
    archives unifiedJar
}